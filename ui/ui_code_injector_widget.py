# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'code_injector_widget.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_CodeInjectorWidget(object):
    def setupUi(self, CodeInjectorWidget):
        CodeInjectorWidget.setObjectName("CodeInjectorWidget")
        CodeInjectorWidget.resize(871, 227)
        self.gridLayout = QtWidgets.QGridLayout(CodeInjectorWidget)
        self.gridLayout.setObjectName("gridLayout")
        self.expandWholeTreeButton_2 = QtWidgets.QPushButton(CodeInjectorWidget)
        self.expandWholeTreeButton_2.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.expandWholeTreeButton_2.setObjectName("expandWholeTreeButton_2")
        self.gridLayout.addWidget(self.expandWholeTreeButton_2, 1, 2, 1, 1)
        self.expandWholeTreeButton_4 = QtWidgets.QPushButton(CodeInjectorWidget)
        self.expandWholeTreeButton_4.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.expandWholeTreeButton_4.setObjectName("expandWholeTreeButton_4")
        self.gridLayout.addWidget(self.expandWholeTreeButton_4, 1, 3, 1, 1)
        self.generateCodeButton = QtWidgets.QPushButton(CodeInjectorWidget)
        self.generateCodeButton.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.generateCodeButton.setObjectName("generateCodeButton")
        self.gridLayout.addWidget(self.generateCodeButton, 1, 4, 1, 1)
        self.expandWholeTreeButton = QtWidgets.QPushButton(CodeInjectorWidget)
        self.expandWholeTreeButton.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.expandWholeTreeButton.setObjectName("expandWholeTreeButton")
        self.gridLayout.addWidget(self.expandWholeTreeButton, 1, 1, 1, 1)
        self.promptForNewFileCheck = QtWidgets.QCheckBox(CodeInjectorWidget)
        self.promptForNewFileCheck.setChecked(True)
        self.promptForNewFileCheck.setObjectName("promptForNewFileCheck")
        self.gridLayout.addWidget(self.promptForNewFileCheck, 1, 0, 1, 1)
        self.injectionSiteTree = QtWidgets.QTreeWidget(CodeInjectorWidget)
        self.injectionSiteTree.setToolTip("")
        self.injectionSiteTree.setAlternatingRowColors(False)
        self.injectionSiteTree.setIconSize(QtCore.QSize(24, 24))
        self.injectionSiteTree.setWordWrap(True)
        self.injectionSiteTree.setObjectName("injectionSiteTree")
        self.injectionSiteTree.header().setHighlightSections(False)
        self.gridLayout.addWidget(self.injectionSiteTree, 0, 0, 1, 5)

        self.retranslateUi(CodeInjectorWidget)
        QtCore.QMetaObject.connectSlotsByName(CodeInjectorWidget)

    def retranslateUi(self, CodeInjectorWidget):
        _translate = QtCore.QCoreApplication.translate
        CodeInjectorWidget.setWindowTitle(_translate("CodeInjectorWidget", "Form"))
        self.expandWholeTreeButton_2.setText(_translate("CodeInjectorWidget", "Add Standard Injection Sites"))
        self.expandWholeTreeButton_4.setText(_translate("CodeInjectorWidget", "Refresh from Django Side"))
        self.generateCodeButton.setText(_translate("CodeInjectorWidget", "Generate Code"))
        self.expandWholeTreeButton.setText(_translate("CodeInjectorWidget", "Expand Whole Tree"))
        self.promptForNewFileCheck.setToolTip(_translate("CodeInjectorWidget", "If unchecked, you can see this dialog again by clicking its app icon in windows."))
        self.promptForNewFileCheck.setText(_translate("CodeInjectorWidget", "Prompt for Each New Injection Site"))
        self.injectionSiteTree.setSortingEnabled(True)
        self.injectionSiteTree.headerItem().setText(0, _translate("CodeInjectorWidget", "Injection Site"))
        self.injectionSiteTree.headerItem().setToolTip(0, _translate("CodeInjectorWidget", "Gathered from comments files in the Django project."))
        self.injectionSiteTree.headerItem().setText(1, _translate("CodeInjectorWidget", "Input Matcher"))
        self.injectionSiteTree.headerItem().setToolTip(1, _translate("CodeInjectorWidget", "A source of parameters to the injection function."))
        self.injectionSiteTree.headerItem().setText(2, _translate("CodeInjectorWidget", "Injection Function"))
        self.injectionSiteTree.headerItem().setToolTip(2, _translate("CodeInjectorWidget", "Function that generates what to inject."))
